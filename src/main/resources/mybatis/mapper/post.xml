<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.outstagram.outstagram.mapper.PostMapper">

  <!--insert 성공 시, DB에서 자동으로 생성된 key를 가져와서 newPost 객체의 id 속성에 값을 넣어준다 (postMapper.insertPost(newPost);)  -->
  <insert id="insertPost" parameterType="com.outstagram.outstagram.dto.PostDTO" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO POST(contents, user_id, create_date, update_date)
    VALUES (#{contents}, #{userId}, #{createDate}, #{updateDate})
  </insert>

  <select id="findByUserId" resultType="com.outstagram.outstagram.dto.PostDTO">
    SELECT id, contents, likes
    FROM post
    WHERE user_id = #{userId}
      AND is_deleted = 0
    ORDER BY create_date DESC
  </select>

  <!-- postId로 게시물 가져오기 -->
  <select id="findById" resultType="com.outstagram.outstagram.dto.PostDTO">
    SELECT id, user_id, contents, likes
    FROM post
    WHERE id = #{postId}
      AND is_deleted = 0
  </select>

  <update id="updateContentsById">
    UPDATE post
    SET contents = #{contents},
        update_date = NOW()
    WHERE id = #{postId}
  </update>

  <update id="deleteById">
    UPDATE post
    SET is_deleted = 1,
        update_date = NOW()
    WHERE id = #{postId}
  </update>




</mapper>